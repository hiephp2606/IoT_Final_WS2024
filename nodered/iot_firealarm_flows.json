[
    {
        "id": "70434cfd46127ed3",
        "type": "tab",
        "label": "FireAlarm",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4a401ec1c9a2155b",
        "type": "aedes broker",
        "z": "70434cfd46127ed3",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "persistence_bind": "memory",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5d9d29677cb05beb",
        "type": "mqtt in",
        "z": "70434cfd46127ed3",
        "name": "",
        "topic": "home/sensors",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "16ba45348df0cf0a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 180,
        "wires": [
            [
                "d9c5418044b27714"
            ]
        ]
    },
    {
        "id": "10c8ca84a654493f",
        "type": "debug",
        "z": "70434cfd46127ed3",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "d9c5418044b27714",
        "type": "function",
        "z": "70434cfd46127ed3",
        "name": "String to JSON",
        "func": "// Input string\nvar inputString = msg.payload; // Assuming msg.payload contains the string\n\n// Regular expression to extract values for Temp, Humidity, and Gas\nvar regex = /Temp:\\s*([\\d\\.]+),\\s*Humidity:\\s*([\\d\\.]+),\\s*Gas:\\s*(\\d+)/;\n\n// Execute regex on the input string\nvar matches = inputString.match(regex);\n\nif (matches) {\n    // Extract values from the matched groups\n    var temp = parseFloat(matches[1]);\n    var humidity = parseFloat(matches[2]);\n    var gas = parseInt(matches[3]);\n\n    // Store the extracted data in the msg object\n    msg.payload = {\n        temperature: temp,\n        humidity: humidity,\n        gas: gas\n    };\n} else {\n    // If no matches are found, return an error message\n    msg.payload = { error: \"Unable to extract data\" };\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 180,
        "wires": [
            [
                "10c8ca84a654493f",
                "a4b1232cc7721c0a",
                "cb29d6c2f1711f9e",
                "08e014af2b04e5d1"
            ]
        ]
    },
    {
        "id": "a4b1232cc7721c0a",
        "type": "ui_template",
        "z": "70434cfd46127ed3",
        "group": "97d5a326dc260b4f",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <div>\n        <p><strong>Temperature:</strong> {{msg.payload.temperature}}°C</p>\n        <p><strong>Humidity:</strong> {{msg.payload.humidity}}%</p>\n        <p><strong>Gas Level:</strong> {{msg.payload.gas}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "cb29d6c2f1711f9e",
        "type": "ui_gauge",
        "z": "70434cfd46127ed3",
        "name": "Temperature",
        "group": "d1ce5f6d742afea4",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "°C",
        "format": "{{msg.payload.temperature}}",
        "min": "20",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "29",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 730,
        "y": 420,
        "wires": []
    },
    {
        "id": "08e014af2b04e5d1",
        "type": "ui_gauge",
        "z": "70434cfd46127ed3",
        "name": "Smoke",
        "group": "c9c0c9dd22a53340",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "",
        "format": "{{msg.payload.gas}}",
        "min": "0",
        "max": "3500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "1500",
        "seg2": "1900",
        "diff": false,
        "className": "",
        "x": 720,
        "y": 520,
        "wires": []
    },
    {
        "id": "16ba45348df0cf0a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.28.105",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "97d5a326dc260b4f",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "655515fa6f4b65ad",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": "width=1000px"
    },
    {
        "id": "d1ce5f6d742afea4",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "655515fa6f4b65ad",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c9c0c9dd22a53340",
        "type": "ui_group",
        "name": "Smoke",
        "tab": "655515fa6f4b65ad",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "655515fa6f4b65ad",
        "type": "ui_tab",
        "name": "Fire Alarm",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]